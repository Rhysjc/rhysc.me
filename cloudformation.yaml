AWSTemplateFormatVersion: 2010-09-09

Parameters:
  CertificateArn:
    Type: String
  Domain:
    Type: String
    Default: rhysc.me
  ZoneId:
    Type: String
  AccountId:
    Type: String

Resources:
  RhysCMEBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref Domain
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  RhysCMEBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RhysCMEBucket
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub 'arn:aws:s3:::${RhysCMEBucket}/*'
            Principal: '*'

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: True
        Aliases:
          - !Ref Domain
          - !Join
            - ''
            - - 'www.'
              - !Ref Domain
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
        Origins:
          - DomainName: !Select [1, !Split ["//", !GetAtt RhysCMEBucket.WebsiteURL]]
            Id: S3Origin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods:
            - GET
            - HEAD
          Compress: True
          DefaultTTL: 30
          MinTTL: 5
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only

  Route53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref ZoneId
      Name: !Ref Domain
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2

  WWWRoute53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref ZoneId
      Name: !Join
        - ''
        - - 'www.'
          - !Ref Domain
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
  
  EmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: !Ref Domain
  
  MXRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref ZoneId
      Name: !Ref Domain
      Type: MX
      TTL: 3600
      ResourceRecords:
        - '10 inbound-smtp.us-east-1.amazonaws.com'

  ProxyLambdaScriptBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: rhyscme-email-proxy

  ProxyLambdaScriptBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ProxyLambdaScriptBucket
      PolicyDocument:
        Statement:
          - Action: s3:PutObject
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Resource: !Sub 'arn:aws:s3:::${ProxyLambdaScriptBucket}/*'
            Principal: '*'
            Condition:
              StringEquals:
                'aws:Referer': !Ref AccountId
    
  ProxyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: email-proxy-s3
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub "arn:aws:s3:::${ProxyLambdaScriptBucket}/*"
              - Effect: Allow
                Action:
                  - ses:SendEmail
                Resource:
                  - !Sub 'arn:aws:ses:us-east-1:${AccountId}:identity/${EmailIdentity}'
                
  ProxyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt ProxyLambdaRole.Arn
      FunctionName: EmailProxy
      Runtime: nodejs14.x
      Handler: index.handler
      Environment:
        Variables:
          s3Bucketname: !Ref ProxyLambdaScriptBucket
      Code:
        S3Bucket: !Ref ProxyLambdaScriptBucket
        S3Key: email-proxy.zip
    
  ProxyLambdaSESPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt ProxyLambda.Arn
      Principal: ses.amazonaws.com
      SourceAccount: !Ref AccountId
  
  EmailReceiptRuleSet:
    Type: AWS::SES::ReceiptRuleSet
    Properties:
      RuleSetName: rhyscme-emails

  EmailReceiptRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref EmailReceiptRuleSet
      Rule:
        Enabled: True
        Name: ForwardProxy
        Recipients:
          - hi@rhysc.me
        Actions:
          - S3Action:
              BucketName: !Ref ProxyLambdaScriptBucket
          - LambdaAction:
              FunctionArn: !GetAtt ProxyLambda.Arn
